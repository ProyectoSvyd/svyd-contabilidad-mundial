@page "/"
@page "/welcome"
@layout WelcomeLayout
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Forms
@using System.ComponentModel.DataAnnotations

<PageTitle>Bienvenido - SVYD Sistema Revolucionario</PageTitle>

<div class="welcome-container">
    <!-- Fondo de cielo y nubes -->
    <div class="sky-background"></div>
    
    <!-- Part√≠culas flotantes para efectos especiales -->
    <div class="floating-particles">
        @for (int i = 0; i < 20; i++)
        {
            <div class="particle" style="--delay: @(i * 0.5)s; --x: @(Random.Shared.Next(0, 100))%; --y: @(Random.Shared.Next(0, 100))%;"></div>
        }
    </div>

    <!-- Contenedor principal -->
    <div class="main-content">
        <!-- Panel izquierdo para informaci√≥n -->
        <div class="left-panel">
            <div class="info-card floating">
                <h3 class="info-title">üåü Contabilidad Mundial</h3>
                <p class="info-text">
                    Gestiona tu contabilidad con la tranquilidad de las nubes. 
                    Una experiencia √∫nica que combina simplicidad y potencia.
                </p>
                <div class="features">
                    <div class="feature-item">
                        <span class="feature-icon">üåç</span>
                        <span>Multimoneda Global</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-icon">‚òÅÔ∏è</span>
                        <span>En la Nube</span>
                    </div>
                    <div class="feature-item">
                        <span class="feature-icon">üîí</span>
                        <span>Seguro y Confiable</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Panel central - Formulario flotante -->
        <div class="center-panel">
            <div class="login-form-container floating">
                <!-- Logo SVYD -->
                <div class="svyd-logo">
                    <div class="logo-oval">
                        <span class="logo-text">Svyd</span>
                    </div>
                </div>

                <!-- T√≠tulo del formulario -->
                <h2 class="form-title">Inicia Sesi√≥n en SVYD</h2>

                <!-- Formulario -->
                <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin" class="login-form">
                    <DataAnnotationsValidator />
                    
                    <!-- Campo de Usuario/Email -->
                    <div class="form-group">
                        <label for="email" class="form-label">Usuario o direcci√≥n de email</label>
                        <InputText id="email" @bind-Value="loginModel.Email" 
                                 class="form-input floating-input" 
                                 placeholder="tu@email.com" />
                        <ValidationMessage For="@(() => loginModel.Email)" class="validation-message" />
                    </div>

                    <!-- Campo de Contrase√±a -->
                    <div class="form-group">
                        <div class="password-header">
                            <label for="password" class="form-label">Contrase√±a</label>
                            <a href="/forgot-password" class="forgot-link">¬øOlvidaste tu contrase√±a?</a>
                        </div>
                        <InputText type="password" id="password" @bind-Value="loginModel.Password" 
                                 class="form-input floating-input" 
                                 placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" />
                        <ValidationMessage For="@(() => loginModel.Password)" class="validation-message" />
                    </div>

                    <!-- Bot√≥n de Iniciar Sesi√≥n -->
                    <button type="submit" class="signin-button" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="loading-spinner"></span>
                            <span>Ingresando...</span>
                        }
                        else
                        {
                            <span>Iniciar Sesi√≥n</span>
                        }
                    </button>

                    <!-- Separador -->
                    <div class="separator">
                        <span>o</span>
                    </div>

                    <!-- Botones alternativos -->
                    <button type="button" class="alt-button google-button" @onclick="LoginWithGoogle">
                        <svg class="button-icon" viewBox="0 0 24 24">
                            <path d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" fill="#4285F4"/>
                            <path d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" fill="#34A853"/>
                            <path d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" fill="#FBBC05"/>
                            <path d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" fill="#EA4335"/>
                        </svg>
                        Continuar con Google
                    </button>

                    <button type="button" class="alt-button apple-button" @onclick="LoginWithApple">
                        <svg class="button-icon" viewBox="0 0 24 24" fill="currentColor">
                            <path d="M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z"/>
                        </svg>
                        Continuar con Apple
                    </button>
                </EditForm>

                <!-- Enlaces adicionales -->
                <div class="additional-links">
                    <p class="signup-text">
                        ¬øNuevo en SVYD? 
                        <a href="/register" class="signup-link">Crear una cuenta</a>
                    </p>
                    <a href="/login-passkey" class="passkey-link">Inicia sesi√≥n con una llave de acceso</a>
                </div>
            </div>
        </div>

        <!-- Panel derecho para informaci√≥n adicional -->
        <div class="right-panel">
            <div class="info-card floating">
                <h3 class="info-title">üöÄ Innovaci√≥n</h3>
                <p class="info-text">
                    Experimenta la contabilidad del futuro con nuestra interfaz 
                    flotante y dise√±o inspirado en las nubes.
                </p>
                <div class="stats">
                    <div class="stat-item">
                        <span class="stat-number">99.9%</span>
                        <span class="stat-label">Disponibilidad</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-number">24/7</span>
                        <span class="stat-label">Soporte</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        // Inicializaci√≥n si es necesaria
        await Task.CompletedTask;
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        try
        {
            // Simular proceso de login
            await Task.Delay(2000);
            
            // Aqu√≠ ir√≠a la l√≥gica real de autenticaci√≥n
            Console.WriteLine($"Login attempt: {loginModel.Email}");
            
            // Redirigir al dashboard o p√°gina principal
            // NavigationManager.NavigateTo("/dashboard");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task LoginWithGoogle()
    {
        // Implementar login con Google
        await Task.Delay(100);
        Console.WriteLine("Login with Google");
    }

    private async Task LoginWithApple()
    {
        // Implementar login con Apple
        await Task.Delay(100);
        Console.WriteLine("Login with Apple");
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "El email es requerido")]
        [EmailAddress(ErrorMessage = "Formato de email inv√°lido")]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "La contrase√±a es requerida")]
        [MinLength(6, ErrorMessage = "La contrase√±a debe tener al menos 6 caracteres")]
        public string Password { get; set; } = "";
    }
}