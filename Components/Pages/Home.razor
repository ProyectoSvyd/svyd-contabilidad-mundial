@page "/"
@using ContabilidadMundial.Data
@using ContabilidadMundial.Models
@using Microsoft.EntityFrameworkCore
@inject ContabilidadContext Context

<PageTitle>Dashboard - Contabilidad Mundial</PageTitle>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">
                <i class="bi bi-speedometer2"></i>
                Dashboard - Contabilidad Mundial
            </h1>
        </div>
    </div>

    <!-- Cards de resumen -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@totalEmpresas</h4>
                            <p class="card-text">Empresas Activas</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-building" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="/empresas" class="text-white text-decoration-none">
                        Ver todas <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@totalSucursales</h4>
                            <p class="card-text">Sucursales</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-geo-alt" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <small>En @totalPaises países</small>
                </div>
            </div>
        </div>

        <div class="col-md-3 mb-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@totalCuentas</h4>
                            <p class="card-text">Cuentas Contables</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-list-ul" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="/cuentas" class="text-white text-decoration-none">
                        Plan de cuentas <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            </div>
        </div>

        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@totalAsientos</h4>
                            <p class="card-text">Asientos Contables</p>
                        </div>
                        <div class="align-self-center">
                            <i class="bi bi-journal-text" style="font-size: 2rem;"></i>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <a href="/asientos" class="text-dark text-decoration-none">
                        Ver asientos <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Información de empresas -->
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-building"></i> Empresas Registradas</h5>
                </div>
                <div class="card-body">
                    @if (empresas?.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Empresa</th>
                                        <th>País</th>
                                        <th>Moneda</th>
                                        <th>Sucursales</th>
                                        <th>Estado</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var empresa in empresas)
                                    {
                                        <tr>
                                            <td>
                                                <strong>@empresa.Nombre</strong><br>
                                                <small class="text-muted">@empresa.CodigoFiscal</small>
                                            </td>
                                            <td>@empresa.PaisBase</td>
                                            <td>@empresa.MonedaBase</td>
                                            <td>
                                                <span class="badge bg-secondary">@empresa.Sucursales.Count</span>
                                            </td>
                                            <td>
                                                @if (empresa.Activa)
                                                {
                                                    <span class="badge bg-success">Activa</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">Inactiva</span>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            No hay empresas registradas. <a href="/empresas" class="alert-link">Crear la primera empresa</a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="bi bi-currency-exchange"></i> Tasas de Cambio Recientes</h5>
                </div>
                <div class="card-body">
                    @if (tasasCambio?.Count > 0)
                    {
                        @foreach (var tasa in tasasCambio)
                        {
                            <div class="mb-3 p-2 border rounded">
                                <div class="d-flex justify-content-between">
                                    <span><strong>@tasa.MonedaOrigen → @tasa.MonedaDestino</strong></span>
                                    <span class="text-primary">@tasa.Tasa.ToString("N4")</span>
                                </div>
                                <small class="text-muted">
                                    Actualizado: @tasa.Fecha.ToString("dd/MM/yyyy")
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            No hay tasas de cambio configuradas.
                        </div>
                    }
                </div>
            </div>

            <div class="card mt-3">
                <div class="card-header">
                    <h5><i class="bi bi-calendar-event"></i> Períodos Contables</h5>
                </div>
                <div class="card-body">
                    @if (periodos?.Count > 0)
                    {
                        @foreach (var periodo in periodos)
                        {
                            <div class="mb-2">
                                <div class="d-flex justify-content-between">
                                    <span><strong>@periodo.Descripcion</strong></span>
                                    <span class="badge @(periodo.Estado == "Abierto" ? "bg-success" : "bg-secondary")">
                                        @periodo.Estado
                                    </span>
                                </div>
                                <small class="text-muted">
                                    @periodo.FechaInicio.ToString("dd/MM") - @periodo.FechaFin.ToString("dd/MM/yyyy")
                                </small>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <i class="bi bi-info-circle"></i>
                            No hay períodos contables configurados.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Empresa> empresas = new();
    private List<TasaCambio> tasasCambio = new();
    private List<PeriodoContable> periodos = new();
    
    private int totalEmpresas = 0;
    private int totalSucursales = 0;
    private int totalPaises = 0;
    private int totalCuentas = 0;
    private int totalAsientos = 0;

    protected override async Task OnInitializedAsync()
    {
        await CargarDatosAsync();
    }

    private async Task CargarDatosAsync()
    {
        try
        {
            // Cargar empresas con sus sucursales
            empresas = await Context.Empresas
                .Include(e => e.Sucursales)
                .Where(e => e.Activa)
                .ToListAsync();

            // Cargar tasas de cambio recientes (últimas 5)
            tasasCambio = await Context.TasasCambio
                .OrderByDescending(t => t.Fecha)
                .Take(5)
                .ToListAsync();

            // Cargar períodos contables activos
            periodos = await Context.PeriodosContables
                .Include(p => p.Empresa)
                .OrderByDescending(p => p.FechaInicio)
                .Take(3)
                .ToListAsync();

            // Calcular totales
            totalEmpresas = await Context.Empresas.CountAsync(e => e.Activa);
            totalSucursales = await Context.Sucursales.CountAsync(s => s.Activa);
            totalPaises = await Context.Sucursales.Select(s => s.CodigoPais).Distinct().CountAsync();
            totalCuentas = await Context.CuentasContables.CountAsync(c => c.Activa);
            totalAsientos = await Context.AsientosContables.CountAsync();
        }
        catch (Exception ex)
        {
            // En caso de error, mostrar datos vacíos
            Console.WriteLine($"Error cargando datos del dashboard: {ex.Message}");
        }
    }
}
